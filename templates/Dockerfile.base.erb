FROM phusion/passenger-ruby26:1.0.9
ARG DEPLOY_KEY
<% if options[:git] %>
ARG REPO_URL
<% end %>

RUN <%= pre_apt_string %> && \
    curl -sL https://deb.nodesource.com/setup_12.x | bash - && \
    apt-get update -qq && \
    apt-get install -y \
      build-essential \
      libsasl2-dev
      nodejs \
      pv \
      tzdata \
      <%= apt_packages_string %> && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \
    <%= post_apt_string %>

<% if options[:fcrepo] %>
RUN mkdir -p /opt/fits && \
  curl -fSL -o /opt/fits/fits-latest.zip https://projects.iq.harvard.edu/files/fits/files/fits-1.3.0.zip && \
  cd /opt/fits && unzip fits-latest.zip && chmod +X /opt/fits/fits.sh
<% end -%>

RUN rm /etc/nginx/sites-enabled/default
COPY ops/webapp.conf /etc/nginx/sites-enabled/webapp.conf
COPY ops/env.conf /etc/nginx/main.d/env.conf

ENV APP_HOME /home/app/webapp
RUN mkdir $APP_HOME
WORKDIR $APP_HOME

<% if options[:git] %>
RUN /sbin/setuser app bash -l -c " \
echo '${DEPLOY_KEY}' | base64 -d > /home/app/.ssh/id_rsa && \
chown app /home/app/.ssh/id_rsa && \
chmod 600 /home/app/.ssh/id_rsa && \
ssh-keyscan gitlab.com >> /home/app/.ssh/known_hosts && \
ssh-keyscan bitbucket.org >> /home/app/.ssh/known_hosts && \
ssh-keyscan github.com > /home/app/.ssh/known_hosts
<% end %>

ENV BUNDLE_GEMFILE=$APP_HOME/Gemfile \
  BUNDLE_JOBS=4

COPY --chown=app Gemfile* $APP_HOME/
RUN /sbin/setuser app bash -l -c "bundle check || bundle install"

<% if options[:git] %>
RUN git clone -â€“depth 2 ${REPO_URL} /home/app/webapp"
<% else %>
COPY --chown=app . $APP_HOME
<% end %>

<% if options[:imagemagick] %>
# reenables pdfs in imagemagick see https://ubuntuforums.org/showthread.php?t=2403266
RUN sed -i '/PDF/s/none/read|write/' /etc/ImageMagick-6/policy.xml
<% end %>

# this is so that these items are cached and only have to be updated
RUN  /sbin/setuser app /bin/bash -l -c 'cd /home/app/webapp && DB_ADAPTER=nulldb bundle exec rake assets:precompile'
# Asset complie and migrate if prod, otherwise just start nginx
ADD ops/nginx.sh /etc/service/nginx/run
RUN chmod +x /etc/service/nginx/run
RUN rm -f /etc/service/nginx/down
